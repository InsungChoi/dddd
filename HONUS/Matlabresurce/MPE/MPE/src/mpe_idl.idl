import "oaidl.idl";
import "ocidl.idl";
import "mwcomtypes.idl";

[
    object,
    uuid("80C1A351-2237-417E-A0DD-8BA48F222C68"),
    dual,
    helpstring("IMPEclass Interface"),
    pointer_default(unique)
]
interface IMPEclass : IDispatch
{
    [propget, id(1), helpstring("property MWFlags")]
    HRESULT MWFlags([out, retval] IMWFlags** ppvFlags);
    [propput, id(1), helpstring("property MWFlags")]
    HRESULT MWFlags([in] IMWFlags* pvFlags);
    
    [id(2), helpstring("Method apfibrous5para")]
    HRESULT apfibrous5para([in] VARIANT L, [in] VARIANT BulkDensity,
                           [in] VARIANT FlowRes, [in] VARIANT SFactor,
                           [in] VARIANT h, [in] VARIANT c1,
                           [in] VARIANT c2, [in] VARIANT fre);

    [id(3), helpstring("Method elasticmeritcalc")]
    HRESULT elasticmeritcalc([in] VARIANT freq,
                             [in] VARIANT MeasuredAbsorption,
                             [in] VARIANT BulkDensity, [in] VARIANT FlowRes,
                             [in] VARIANT SFactor, [in] VARIANT h,
                             [in] VARIANT c1, [in] VARIANT c2,
                             [in] VARIANT Em, [in] VARIANT LFactor,
                             [in] VARIANT PRatio, [in] VARIANT L);

    [id(4), helpstring("Method meritcalc")]
    HRESULT meritcalc([in] VARIANT freq, [in] VARIANT MAbsorption,
                      [in] VARIANT BulkDensity, [in] VARIANT FlowRes,
                      [in] VARIANT SFactor, [in] VARIANT h,
                      [in] VARIANT c1, [in] VARIANT c2, [in] VARIANT L);

    [id(5), helpstring("Method pecalc")]
    HRESULT pecalc([in] VARIANT PrevError);

    [id(6), helpstring("Method peelasticsolid")]
    HRESULT peelasticsolid([in] VARIANT L, [in] VARIANT BulkDensity,
                           [in] VARIANT h, [in] VARIANT ResonanceFrequency);

    [id(7), helpstring("Method polyfitting")]
    HRESULT polyfitting([in] VARIANT FrequencyFitted,
                        [in] VARIANT FrequencySampled,
                        [in] VARIANT DataSampled, [in] VARIANT n);

    [id(8), helpstring("Method totalmeritcalc")]
    HRESULT totalmeritcalc([in] VARIANT Freq1, [in] VARIANT Freq2,
                           [in] VARIANT tFlowRes, [in] VARIANT tSFactor,
                           [in] VARIANT h, [in] VARIANT c1, [in] VARIANT c2);

        [propget, id(9), helpstring("property ItaAir")]
        HRESULT ItaAir([out, retval] VARIANT* ItaAir);
        [propput, id(9), helpstring("property ItaAir")]
        HRESULT ItaAir([in] VARIANT ItaAir);
    
        [propget, id(10), helpstring("property P0")]
        HRESULT P0([out, retval] VARIANT* P0);
        [propput, id(10), helpstring("property P0")]
        HRESULT P0([in] VARIANT P0);
    
        [propget, id(11), helpstring("property Densityo")]
        HRESULT Densityo([out, retval] VARIANT* Densityo);
        [propput, id(11), helpstring("property Densityo")]
        HRESULT Densityo([in] VARIANT Densityo);
    
        [propget, id(12), helpstring("property Z0")]
        HRESULT Z0([out, retval] VARIANT* Z0);
        [propput, id(12), helpstring("property Z0")]
        HRESULT Z0([in] VARIANT Z0);
    
        [propget, id(13), helpstring("property MAbsorption")]
        HRESULT MAbsorption([out, retval] VARIANT* MAbsorption);
        [propput, id(13), helpstring("property MAbsorption")]
        HRESULT MAbsorption([in] VARIANT MAbsorption);
    
        [propget, id(14), helpstring("property B")]
        HRESULT B([out, retval] VARIANT* B);
        [propput, id(14), helpstring("property B")]
        HRESULT B([in] VARIANT B);
    
        [propget, id(15), helpstring("property c")]
        HRESULT c([out, retval] VARIANT* c);
        [propput, id(15), helpstring("property c")]
        HRESULT c([in] VARIANT c);
    
        [propget, id(16), helpstring("property Npr")]
        HRESULT Npr([out, retval] VARIANT* Npr);
        [propput, id(16), helpstring("property Npr")]
        HRESULT Npr([in] VARIANT Npr);
    
        [propget, id(17), helpstring("property Density1")]
        HRESULT Density1([out, retval] VARIANT* Density1);
        [propput, id(17), helpstring("property Density1")]
        HRESULT Density1([in] VARIANT Density1);
    
        [propget, id(18), helpstring("property DensityA")]
        HRESULT DensityA([out, retval] VARIANT* DensityA);
        [propput, id(18), helpstring("property DensityA")]
        HRESULT DensityA([in] VARIANT DensityA);
    
        [propget, id(19), helpstring("property HeatRatio")]
        HRESULT HeatRatio([out, retval] VARIANT* HeatRatio);
        [propput, id(19), helpstring("property HeatRatio")]
        HRESULT HeatRatio([in] VARIANT HeatRatio);
    
        [propget, id(20), helpstring("property APFibrous")]
        HRESULT APFibrous([out, retval] VARIANT* APFibrous);
        [propput, id(20), helpstring("property APFibrous")]
        HRESULT APFibrous([in] VARIANT APFibrous);
    
        [propget, id(21), helpstring("property Merit")]
        HRESULT Merit([out, retval] VARIANT* Merit);
        [propput, id(21), helpstring("property Merit")]
        HRESULT Merit([in] VARIANT Merit);
    
        [propget, id(22), helpstring("property Absorption")]
        HRESULT Absorption([out, retval] VARIANT* Absorption);
        [propput, id(22), helpstring("property Absorption")]
        HRESULT Absorption([in] VARIANT Absorption);
    
        [propget, id(23), helpstring("property RealSurfaceImpedance")]
        HRESULT RealSurfaceImpedance([out, retval] VARIANT* RealSurfaceImpedance);
        [propput, id(23), helpstring("property RealSurfaceImpedance")]
        HRESULT RealSurfaceImpedance([in] VARIANT RealSurfaceImpedance);
    
        [propget, id(24), helpstring("property ImagSurfaceImpedance")]
        HRESULT ImagSurfaceImpedance([out, retval] VARIANT* ImagSurfaceImpedance);
        [propput, id(24), helpstring("property ImagSurfaceImpedance")]
        HRESULT ImagSurfaceImpedance([in] VARIANT ImagSurfaceImpedance);
    
        [propget, id(25), helpstring("property BulkDensity")]
        HRESULT BulkDensity([out, retval] VARIANT* BulkDensity);
        [propput, id(25), helpstring("property BulkDensity")]
        HRESULT BulkDensity([in] VARIANT BulkDensity);
    
        [propget, id(26), helpstring("property Thickness")]
        HRESULT Thickness([out, retval] VARIANT* Thickness);
        [propput, id(26), helpstring("property Thickness")]
        HRESULT Thickness([in] VARIANT Thickness);
    
        [propget, id(27), helpstring("property FlowRes")]
        HRESULT FlowRes([out, retval] VARIANT* FlowRes);
        [propput, id(27), helpstring("property FlowRes")]
        HRESULT FlowRes([in] VARIANT FlowRes);
    
        [propget, id(28), helpstring("property SFactor")]
        HRESULT SFactor([out, retval] VARIANT* SFactor);
        [propput, id(28), helpstring("property SFactor")]
        HRESULT SFactor([in] VARIANT SFactor);
    
        [propget, id(29), helpstring("property Porosity")]
        HRESULT Porosity([out, retval] VARIANT* Porosity);
        [propput, id(29), helpstring("property Porosity")]
        HRESULT Porosity([in] VARIANT Porosity);
    
        [propget, id(30), helpstring("property ViscousCL")]
        HRESULT ViscousCL([out, retval] VARIANT* ViscousCL);
        [propput, id(30), helpstring("property ViscousCL")]
        HRESULT ViscousCL([in] VARIANT ViscousCL);
    
        [propget, id(31), helpstring("property ThermalCL")]
        HRESULT ThermalCL([out, retval] VARIANT* ThermalCL);
        [propput, id(31), helpstring("property ThermalCL")]
        HRESULT ThermalCL([in] VARIANT ThermalCL);
    
        [propget, id(32), helpstring("property FlowResEst")]
        HRESULT FlowResEst([out, retval] VARIANT* FlowResEst);
        [propput, id(32), helpstring("property FlowResEst")]
        HRESULT FlowResEst([in] VARIANT FlowResEst);
    
        [propget, id(33), helpstring("property SFactorEst")]
        HRESULT SFactorEst([out, retval] VARIANT* SFactorEst);
        [propput, id(33), helpstring("property SFactorEst")]
        HRESULT SFactorEst([in] VARIANT SFactorEst);
    
        [propget, id(34), helpstring("property PorosityEst")]
        HRESULT PorosityEst([out, retval] VARIANT* PorosityEst);
        [propput, id(34), helpstring("property PorosityEst")]
        HRESULT PorosityEst([in] VARIANT PorosityEst);
    
        [propget, id(35), helpstring("property ViscousCLEst")]
        HRESULT ViscousCLEst([out, retval] VARIANT* ViscousCLEst);
        [propput, id(35), helpstring("property ViscousCLEst")]
        HRESULT ViscousCLEst([in] VARIANT ViscousCLEst);
    
        [propget, id(36), helpstring("property ThermalCLEst")]
        HRESULT ThermalCLEst([out, retval] VARIANT* ThermalCLEst);
        [propput, id(36), helpstring("property ThermalCLEst")]
        HRESULT ThermalCLEst([in] VARIANT ThermalCLEst);
    
        [propget, id(37), helpstring("property freq")]
        HRESULT freq([out, retval] VARIANT* freq);
        [propput, id(37), helpstring("property freq")]
        HRESULT freq([in] VARIANT freq);
    
        [propget, id(38), helpstring("property Frequency")]
        HRESULT Frequency([out, retval] VARIANT* Frequency);
        [propput, id(38), helpstring("property Frequency")]
        HRESULT Frequency([in] VARIANT Frequency);
    
        [propget, id(39), helpstring("property SurfaceImpedance")]
        HRESULT SurfaceImpedance([out, retval] VARIANT* SurfaceImpedance);
        [propput, id(39), helpstring("property SurfaceImpedance")]
        HRESULT SurfaceImpedance([in] VARIANT SurfaceImpedance);
    
        [propget, id(40), helpstring("property TotalMerit")]
        HRESULT TotalMerit([out, retval] VARIANT* TotalMerit);
        [propput, id(40), helpstring("property TotalMerit")]
        HRESULT TotalMerit([in] VARIANT TotalMerit);
    
        [propget, id(41), helpstring("property SolidPara")]
        HRESULT SolidPara([out, retval] VARIANT* SolidPara);
        [propput, id(41), helpstring("property SolidPara")]
        HRESULT SolidPara([in] VARIANT SolidPara);
    
        [propget, id(42), helpstring("property DataFitted")]
        HRESULT DataFitted([out, retval] VARIANT* DataFitted);
        [propput, id(42), helpstring("property DataFitted")]
        HRESULT DataFitted([in] VARIANT DataFitted);
    };
[
    uuid("4C6FAE67-D239-4910-8BA7-DC286528C220"),
    version(1.0),
    helpstring("MPE 1.0 Type Library")
]
library MPE
{
    importlib("stdole32.tlb");
    importlib("stdole2.tlb");
    importlib("mwcomutil.tlb");
    
    [
        uuid("BC5CDAF7-66A6-48F2-AFCA-5C85D1249E67"),
        helpstring("MPEclass Class")
    ]
    coclass MPEclass
    {
        [default] interface IMPEclass;
    };
};
